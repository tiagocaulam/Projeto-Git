Script started on 2025-08-01 15:55:18-03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="120" LINES="30"]
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

[?2004h]0;tiago@TiagoMaia: ~[01;32mtiago@TiagoMaia[00m:[01;34m~[00m$ [7mmkdir git-workshop && cd git-workshop[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmkdir git-workshop && cd git-workshop
[?2004l[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit init[27mgit init
[?2004l[33mhint: Using 'master' as the name for the initial branch. This default branch name[m
[33mhint: is subject to change. To configure the initial branch name to use in all[m
[33mhint: of your new repositories, which will suppress this warning, call:[m
[33mhint: [m
[33mhint: 	git config --global init.defaultBranch <name>[m
[33mhint: [m
[33mhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and[m
[33mhint: 'development'. The just-created branch can be renamed via this command:[m
[33mhint: [m
[33mhint: 	git branch -m <name>[m
Initialized empty Git repository in /home/tiago/git-workshop/.git/
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mecho "v1" > notas.txt[27m
[7mgit add . && git commit -m "v1"[27m
[7mecho "v2" >> notas.txt && git commit -am "v2"[27m
[7mecho "v3" >> notas.txt && git commit -am "v3"[27m[A[A[Aecho "v1" > notas.txt
git add . && git commit -m "v1"
echo "v2" >> notas.txt && git commit -am "v2"
echo "v3" >> notas.txt && git commit -am "v3"[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit add . && git commit -m "v1"[27mgit add . && git commit -m "v1"
[?2004lAuthor identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: empty ident name (for <tiago@TiagoMaia.localdomain>) not allowed
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ git config --gloval is[K[Kuser,[K.name "Tiago"
[?2004lerror: unknown option `gloval'
usage: git config [<options>]

Config file location
    --[no-]global         use global config file
    --[no-]system         use system config file
    --[no-]local          use repository config file
    --[no-]worktree       use per-worktree config file
    -f, --[no-]file <file>
                          use given config file
    --[no-]blob <blob-id> read config from given blob object

Action
    --[no-]get            get value: name [value-pattern]
    --[no-]get-all        get all values: key [value-pattern]
    --[no-]get-regexp     get values for regexp: name-regex [value-pattern]
    --[no-]get-urlmatch   get value specific for the URL: section[.var] URL
    --[no-]replace-all    replace all matching variables: name value [value-pattern]
    --[no-]add            add a new variable: name value
    --[no-]unset          remove a variable: name [value-pattern]
    --[no-]unset-all      remove all matches: name [value-pattern]
    --[no-]rename-section rename section: old-name new-name
    --[no-]remove-section remove a section: name
    -l, --[no-]list       list all
    --[no-]fixed-value    use string equality when comparing values to 'value-pattern'
    -e, --[no-]edit       open an editor
    --[no-]get-color      find the color configured: slot [default]
    --[no-]get-colorbool  find the color setting: slot [stdout-is-tty]

Type
    -t, --[no-]type <type>
                          value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --[no-]null       terminate values with NUL byte
    --[no-]name-only      show variable names only
    --[no-]includes       respect include directives on lookup
    --[no-]show-origin    show origin of config (file, standard input, blob, command line)
    --[no-]show-scope     show scope of config (worktree, local, global, system, command)
    --[no-]default <value>
                          with --get, use default value when missing entry

[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ git config --gloval user.name "Tiago"[1P[1@b
[?2004l[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ git config =[K-- [Kgloval[K[K[Kbal user.email ""t"i"a"g"o"c"a"u"l"a"m"@"g"m"a"i"l","c"o"[1P"[1P"[1P"."c"o"m"
[?2004l[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ git config --global user.email "tiagocaulam@gmail.com"[17Pname "Tiago"v[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6Padd . && git commit -m "v1"
[?2004l[master (root-commit) 7f297ab] v1
 1 file changed, 1 insertion(+)
 create mode 100644 notas.txt
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mecho "v2" >> notas.txt && git commit -am "v2"[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cecho "v2" >> notas.txt && git commit -am "v2"
[?2004l[master ea10083] v2
 1 file changed, 1 insertion(+)
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mecho "v3" >> notas.txt && git commit -am "v3"[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cecho "v3" >> notas.txt && git commit -am "v3"
[?2004l[master 9ebafe8] v3
 1 file changed, 1 insertion(+)
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit log --oneline[27mgit log --oneline
[?2004l[?1h=[33m9ebafe8[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m v3[m
[33mea10083[m v2[m
[33m7f297ab[m v1[m
[K[?1l>[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit log --oneline[27mgit log --oneline[7mgit checkout HEAD~2[27m[1Pgit checkout HEAD~[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[7mgit checkout HEAD~2[27mgit checkout HEAD~2
[?2004lNote: switching to 'HEAD~2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 7f297ab v1
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mcat notas.txt[27mcat notas.txt
[?2004lv1
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit checkout main[27mgit checkout main
[?2004lerror: pathspec 'main' did not match any file(s) known to git
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ 
[?2004l[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ git checkout main[K[K[Kasye[K[Kter
[?2004lPrevious HEAD position was 7f297ab v1
Switched to branch 'master'
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ git checkout master[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[7mgit log --oneline[27mgit log --oneline
[?2004l[?1h=[33m9ebafe8[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m v3[m
[33mea10083[m v2[m
[33m7f297ab[m v1[m
[K[?1l>[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit reset --soft HEAD~1[27mgit reset --soft HEAD~1
[?2004l[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit commit -m "Corrige v2 revertido"[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit commit -m "Corrige v2 revertido"
[?2004l[master a993240] Corrige v2 revertido
 1 file changed, 1 insertion(+)
[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ [7mgit log --oneline[27mgit log --oneline
[?2004l[?1h=[33ma993240[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m Corrige v2 revertido[m
[33mea10083[m v2[m
[33m7f297ab[m v1[m
[K[?1l>[?2004h]0;tiago@TiagoMaia: ~/git-workshop[01;32mtiago@TiagoMaia[00m:[01;34m~/git-workshop[00m$ exit
[?2004lexit

Script done on 2025-08-01 15:59:45-03:00 [COMMAND_EXIT_CODE="0"]
